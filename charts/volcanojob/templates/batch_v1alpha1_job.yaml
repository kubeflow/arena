{{- $gpuCount := .Values.gpuCount -}}
{{- $dataDirs := .Values.dataDirs -}}
{{- $dot := . }}
apiVersion: "batch.volcano.sh/v1alpha1"
kind: "Job"
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ template "volcanojob.name" . }}
    chart: {{ template "volcanojob.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    createdBy: "VolcanoJob"
  {{- range $key, $value := .Values.labels }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  annotations:
  {{- range $key, $value := .Values.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
spec:
  schedulerName: {{ .Values.schedulerName | default "volcano" | quote }}
  minAvailable: {{ .Values.minAvailable }}
  queue: {{ .Values.queue | default "default" | quote }}
  tasks:
    {{- range $key, $value := .Values.taskImages }}
    - name: {{ $dot.Values.taskName }}-{{$key}}
      replicas: {{ $dot.Values.taskReplicas }}
      template:
        metadata:
          labels:
            app: {{ include "volcanojob.name" $dot }}
            chart: {{ include "volcanojob.chart" $dot}}
            release: {{ $dot.Release.Name }}
            heritage: {{ $dot.Release.Service }}
            {{- if eq (int $key) 0}}
            volcano-role: "driver"
            {{- end}}
            createdBy: "VolcanoJob"
            {{- range $key, $value := $dot.Values.labels }}
            {{ $key }}: {{ $value | quote }}
            {{- end }}
          annotations:
            {{- range $key, $value := $dot.Values.annotations }}
            {{ $key }}: {{ $value | quote }}
            {{- end }}
        spec:
            schedulerName: {{ $dot.Values.schedulerName | default "volcano" | quote }}
            restartPolicy: {{ $dot.Values.restartPolicy | default "Never" | quote }}
            containers:
              - name: {{ $dot.Values.taskName }}
                image: {{ $value }}
                imagePullPolicy: {{ $dot.Values.imagePullPolicy }}
                resources:
                  requests:
                    {{- if gt (int $gpuCount) 0}}
                      {{- if $dot.Values.nvidiaPath }}
                      alpha.kubernetes.io/nvidia-gpu: {{ $gpuCount | quote }}
                      {{- else}}
                      nvidia.com/gpu: {{ $gpuCount | quote }}
                      {{- end}}
                    {{- end}}
                      {{- if $dot.Values.taskCPU }}
                      cpu: {{ $dot.Values.taskCPU | quote }}
                      {{- end}}
                      {{- if $dot.Values.taskMemory }}
                      memory: {{ $dot.Values.taskMemory | quote }}
                      {{- end}}
                  limits:
                    {{- if gt (int $gpuCount) 0}}
                      {{- if .Values.nvidiaPath }}
                      alpha.kubernetes.io/nvidia-gpu: {{ $gpuCount | quote }}
                      {{- else}}
                      nvidia.com/gpu: {{ $gpuCount | quote }}
                      {{- end}}
                    {{- end}}
                      {{- if $dot.Values.taskCPU }}
                      cpu: {{ $dot.Values.taskCPU | quote }}
                      {{- end}}
                      {{- if $dot.Values.taskMemory }}
                      memory: {{ $dot.Values.taskMemory | quote }}
                      {{- end}}
                {{- if $dot.Values.taskPort }}
                ports:
                  - containerPort: {{ $dot.Values.taskPort }}
                    name: job-port-{{$key}}
                {{- end}}
                {{- if $dot.Values.command }}
                command:
                  - "sh"
                  - "-c"
                  - {{ $dot.Values.command }}
                {{- end}}
                {{- if $dot.Values.envs }}
                env:
                {{- range $key, $value := $dot.Values.envs }}
                - name: "{{ $key }}"
                  value: "{{ $value }}"
                {{- end }}
                {{- end }}
  {{- end }}


