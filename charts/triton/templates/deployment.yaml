{{- $gpuCount := .Values.gpuCount -}}
{{- $gpuMemory := .Values.gpuMemory -}}
{{- $gpuCore := .Values.gpuCore -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "nvidia-triton-server.fullname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: {{ template "nvidia-triton-server.chart" . }}
    app: {{ template "nvidia-triton-server.name" . }}
    servingName: "{{ .Values.servingName }}"
    servingVersion: "{{ .Values.servingVersion }}"
    servingType: "triton-serving"
  {{- range $key, $value := .Values.labels }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  annotations:
    "helm.sh/created": {{ now | unixEpoch | quote }} 
  {{- range $key, $value := .Values.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      release: {{ .Release.Name | quote }}
      app: {{ template "nvidia-triton-server.name" . }}
  template:
    metadata:
      annotations:
      {{- if eq .Values.enableIstio true }}
        sidecar.istio.io/inject: "true"
      {{- end }}
      {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      labels:
        heritage: {{ .Release.Service | quote }}
        release: {{ .Release.Name | quote }}
        chart: {{ template "nvidia-triton-server.chart" . }}
        app: {{ template "nvidia-triton-server.name" . }}
        serviceName: "{{ .Values.servingName }}"
        servingName: "{{ .Values.servingName }}"
        servingVersion: "{{ .Values.servingVersion }}"
        servingType: "triton-serving"
      {{- range $key, $value := .Values.labels }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
    spec:
      {{- if ne (len .Values.nodeSelectors) 0 }}
      nodeSelector:
      {{- range $nodeKey,$nodeVal := .Values.nodeSelectors }}
        {{ $nodeKey }}: "{{ $nodeVal }}"
      {{- end }}
      {{- end }}
      {{- if ne (len .Values.tolerations) 0 }}
      tolerations:
      {{- range $tolerationKey := .Values.tolerations }}
        {{- if eq $tolerationKey "all" }}
        - operator: "Exists"
        {{- else }}
        - key: "{{ $tolerationKey }}"
          operator: "Exists"
        {{- end }}
      {{- end }}
      {{- end }}
      containers:
        - name: tritonserver
          {{- if .Values.image }}
          image: "{{ .Values.image }}"
          {{- end }}
          {{- if .Values.imagePullPolicy }}
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          {{- end }}
          env:
          {{- if .Values.envs }}
          {{- range $key, $value := .Values.envs }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
          {{- end }}
          {{- end }}
            - name: ARENA_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName   
            - name: ARENA_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace              
            - name: ARENA_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ARENA_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP            
          {{- if ne .Values.command "" }}
          command:
            - "{{ .Values.shell }}"
            - "-c"
            - "{{ .Values.command }}"
          {{- else }}
          command:
            - "{{ .Values.shell }}"
            - "-c"
          args:
            - |
              tritonserver --http-port={{ .Values.httpPort }} --grpc-port={{ .Values.grpcPort }}
            {{- if .Values.allowMetrics }} --metrics-port={{ .Values.metricsPort }} {{- end }} --allow-metrics={{ .Values.allowMetrics }}
            {{- if ne .Values.modelRepository "" }} --model-repository={{ .Values.modelRepository }} {{- end }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.httpPort }}
              name: http
              protocol: TCP
            - containerPort: {{ .Values.grpcPort }}
              name: grpc
            {{- if .Values.allowMetrics }}
            - containerPort: {{ .Values.metricsPort }}
              name: metrics
            {{- end }}
          livenessProbe:
            failureThreshold: 30
            initialDelaySeconds: 100
            periodSeconds: 5
            httpGet:
              path: /v2/health/live
              port: http
          readinessProbe:
            failureThreshold: 30
            initialDelaySeconds: 100
            periodSeconds: 5
            httpGet:
              path: /v2/health/ready
              port: http
          resources:
            limits:
              {{- if .Values.cpu }}
              cpu: {{ .Values.cpu }}
              {{- end }}
              {{- if .Values.memory }}
              memory: {{ .Values.memory }}
              {{- end }}
              {{- if gt (int $gpuCount) 0}}
              nvidia.com/gpu: {{ .Values.gpuCount }}
              {{- end }}
              {{- if gt (int $gpuMemory) 0}}
              aliyun.com/gpu-mem: {{ .Values.gpuMemory }}
              {{- end }}
              {{ - if gt (int $gpuCore) 0 }}
              aliyun.com/gpu-core.percentage: {{ .Values.gpuCore }}
              {{ - end }}
          volumeMounts:
            {{- if .Values.modelDirs }}
            {{- range $pvcName, $destPath := .Values.modelDirs}}
            - name: "{{ $pvcName }}"
              mountPath: "{{ $destPath }}"
            {{- end }}
            {{- end }}
            {{- if ne (len .Values.configFiles) 0 }}
            {{- $releaseName := .Release.Name }}
            {{- range $containerPathKey,$configFileInfos := .Values.configFiles }}
            {{- $visit := "false" }}
            {{- range $cofigFileKey,$configFileInfo := $configFileInfos }}
            {{- if eq  "false" $visit }}
            - name: {{ $containerPathKey }}
              mountPath: {{ $configFileInfo.containerFilePath }}
            {{- $visit = "true" }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- end }}
      volumes:
        {{- if .Values.modelDirs }}
        {{- range $pvcName, $destPath := .Values.modelDirs}}
        - name: "{{ $pvcName }}"
          persistentVolumeClaim:
            claimName: "{{ $pvcName }}"
        {{- end }}
        {{- end }}
        {{- if ne (len .Values.configFiles) 0 }}
        {{- $releaseName := .Release.Name }}
        {{- range $containerPathKey,$configFileInfos := .Values.configFiles }}
        - name: {{ $containerPathKey }}
          configMap:
            name: {{ $releaseName }}-{{ $containerPathKey }}
        {{- end }}
        {{- end }}
