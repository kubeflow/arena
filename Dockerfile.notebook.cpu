# ARG BASE_IMAGE=registry.aliyuncs.com/kubeflow-images-public/tensorflow-1.12.0-notebook:v0.4.0
ARG BASE_IMAGE=tensorflow/tensorflow:1.12.0-devel-py3

ARG USER=root

FROM golang:1.19.4 as build

RUN mkdir -p /go/src/github.com/kubeflow/arena

WORKDIR /go/src/github.com/kubeflow/arena
COPY . .

RUN make

RUN wget https://get.helm.sh/helm-v2.14.1-linux-amd64.tar.gz && \
    tar -xvf helm-v2.14.1-linux-amd64.tar.gz && \
    mv linux-amd64/helm /usr/local/bin/helm && \
    chmod u+x /usr/local/bin/helm

ENV K8S_VERSION v1.13.6
RUN curl -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl && chmod +x /usr/local/bin/kubectl

FROM $BASE_IMAGE

COPY --from=build /go/src/github.com/kubeflow/arena/bin/arena /usr/local/bin/arena

COPY --from=build /usr/local/bin/helm /usr/local/bin/arena-helm

COPY --from=build /go/src/github.com/kubeflow/arena/charts /charts

COPY --from=build /usr/local/bin/kubectl /usr/local/bin/kubectl

RUN chmod a+rx /usr/local/bin/* && \
    chmod a+rx -R /charts

RUN apt-get update && \
    apt-get install bash-completion tree -y && \
    echo "source /etc/bash_completion" >> /etc/bash.bashrc && \
    echo "source <(arena completion bash)" >> /etc/bash.bashrc

USER $USER  

ADD jupyter/run_jupyter.sh /run_jupyter.sh
ADD jupyter/jupyter_notebook_config.py /jupyter_notebook_config.py

RUN chmod 755 /run_jupyter.sh

CMD [ "/run_jupyter.sh"]
