#
# Copyright 2025 The Kubeflow authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

suite: Test cron-operator Deployment

templates:
- deployment.yaml

release:
  name: cron-operator
  namespace: cron-operator

tests:
- it: Should add labels if `labels` is set
  set:
    labels:
      key1: value1
      key2: value2
  asserts:
  - equal:
      path: metadata.labels.key1
      value: value1
  - equal:
      path: metadata.labels.key2
      value: value2
  - equal:
      path: spec.template.metadata.labels.key1
      value: value1
  - equal:
      path: spec.template.metadata.labels.key2
      value: value2

- it: Should add labels if `annotations` is set
  set:
    annotations:
      key1: value1
      key2: value2
  asserts:
  - equal:
      path: metadata.annotations.key1
      value: value1
  - equal:
      path: metadata.annotations.key2
      value: value2
  - equal:
      path: spec.template.metadata.annotations.key1
      value: value1
  - equal:
      path: spec.template.metadata.annotations.key2
      value: value2

- it: Should use the specified image repository if `image.registry`, `image.repository` and `image.tag` are set
  set:
    image:
      registry: test-registry
      repository: test-repository
      tag: test-tag
  asserts:
  - equal:
      path: spec.template.spec.containers[0].image
      value: test-registry/test-repository:test-tag

- it: Should use `global.image.registry` if `image.registry` is not set.
  set:
    global:
      image:
        registry: global-image-registry
    image:
      registry: ""
      repository: test-repository
      tag: test-tag
  asserts:
  - equal:
      path: spec.template.spec.containers[0].image
      value: global-image-registry/test-repository:test-tag

- it: Should use the specified image pull policy if `image.pullPolicy` is set
  set:
    image:
      pullPolicy: Never
  asserts:
  - equal:
      path: spec.template.spec.containers[*].imagePullPolicy
      value: Never

- it: Should add resources if `resources` is set
  set:
    resources:
      requests:
        memory: 64Mi
        cpu: 250m
      limits:
        memory: 128Mi
        cpu: 500m
  asserts:
  - equal:
      path: spec.template.spec.containers[0].resources
      value:
        requests:
          memory: 64Mi
          cpu: 250m
        limits:
          memory: 128Mi
          cpu: 500m

- it: Should add nodeSelector if `global.nodeSelector` is set
  set:
    global:
      nodeSelector:
        key1: value1
        key2: value2
  asserts:
  - equal:
      path: spec.template.spec.nodeSelector["key1"]
      value: value1
  - equal:
      path: spec.template.spec.nodeSelector["key2"]
      value: value2

- it: Should add nodeSelector if `nodeSelector` is set
  set:
    nodeSelector:
      key1: value1
      key2: value2
  asserts:
  - equal:
      path: spec.template.spec.nodeSelector["key1"]
      value: value1
  - equal:
      path: spec.template.spec.nodeSelector["key2"]
      value: value2

- it: Should add nodeSelector if both `global.nodeSelector` and `nodeSelector` are set
  set:
    global:
      nodeSelector:
        key1: value1
        key2: value2
    nodeSelector:
      key3: value3
      key4: value4
  asserts:
  - equal:
      path: spec.template.spec.nodeSelector["key1"]
      value: value1
  - equal:
      path: spec.template.spec.nodeSelector["key2"]
      value: value2
  - equal:
      path: spec.template.spec.nodeSelector["key3"]
      value: value3
  - equal:
      path: spec.template.spec.nodeSelector["key4"]
      value: value4

- it: Should add edge nodeSelector if `global.clusterProfile` is `Edge`
  set:
    global:
      clusterProfile: Edge
  asserts:
  - equal:
      path: spec.template.spec.nodeSelector["alibabacloud.com/is-edge-worker"]
      value: "false"

- it: Should add tolerations if `global.tolerations` is set
  set:
    global:
      tolerations:
      - key: key1
        operator: Equal
        value: value1
        effect: NoSchedule
      - key: key2
        operator: Exists
        effect: NoSchedule
  asserts:
  - equal:
      path: spec.template.spec.tolerations
      value:
      - key: key1
        operator: Equal
        value: value1
        effect: NoSchedule
      - key: key2
        operator: Exists
        effect: NoSchedule

- it: Should add tolerations if `tolerations` is set
  set:
    tolerations:
    - key: key1
      operator: Equal
      value: value1
      effect: NoSchedule
    - key: key2
      operator: Exists
      effect: NoSchedule
  asserts:
  - equal:
      path: spec.template.spec.tolerations
      value:
      - key: key1
        operator: Equal
        value: value1
        effect: NoSchedule
      - key: key2
        operator: Exists
        effect: NoSchedule

- it: Should add tolerations if both `global.tolerations` and `tolerations` are set
  set:
    global:
      tolerations:
      - key: key1
        operator: Equal
        value: value1
        effect: NoSchedule
      - key: key2
        operator: Exists
        effect: NoSchedule
    tolerations:
    - key: key3
      operator: Equal
      value: value3
      effect: NoSchedule
    - key: key4
      operator: Exists
      effect: NoSchedule
  asserts:
  - equal:
      path: spec.template.spec.tolerations
      value:
      - key: key1
        operator: Equal
        value: value1
        effect: NoSchedule
      - key: key2
        operator: Exists
        effect: NoSchedule
      - key: key3
        operator: Equal
        value: value3
        effect: NoSchedule
      - key: key4
        operator: Exists
        effect: NoSchedule

- it: Should add edge tolerations if `global.clusterProfile` is `Edge`
  set:
    global:
      clusterProfile: Edge
  asserts:
  - contains:
      path: spec.template.spec.tolerations
      content:
        key: node-role.alibabacloud.com/addon
        operator: Exists
        effect: NoSchedule
